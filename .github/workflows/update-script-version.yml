name: Bump Script Version

on:
  push:
  pull_request:

jobs:
  update_version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 2
      # Check if main.py has been modified since the last commit
      - name: Update Script Version
        id: version_code_check
        env:
          GIT_AUTH: ${{ secrets.GIT_AUTH }}
        run: |
          if ! git diff HEAD~1 --name-only | grep -q "main.py"; then
            echo "No changes to main.py since last commit"
            exit 0
          else
            echo "main.py file has been modified"
            # Get the previous SCRIPT_VERSION from the last commit
            PREVIOUS_SCRIPT_VERSION=$(git show HEAD~:main.py | grep "SCRIPT_VERSION = " | cut -d "=" -f 2 | tr -d " '\"")

            # Get the current SCRIPT_VERSION from main.py
            SCRIPT_VERSION=$(grep "SCRIPT_VERSION = " main.py | cut -d '"' -f 2)

            # Check if the SCRIPT_VERSION has been manually updated
            if [[ "$SCRIPT_VERSION" != "$PREVIOUS_SCRIPT_VERSION" ]]; then
              echo "SCRIPT_VERSION has been manually updated"
              echo "CREATE_RELEASE=false" >> $GITHUB_OUTPUT
              exit 0
            else
              echo 'SCRIPT_VERSION has NOT been manually updated'
              # Increment the SCRIPT_VERSION by 0.1
              NEW_SCRIPT_VERSION=$(awk -v prev="$SCRIPT_VERSION" 'BEGIN { printf "%.1f", prev+0.1 }')

              # Update the SCRIPT_VERSION in main.py
              sed -i "s/SCRIPT_VERSION = \"$SCRIPT_VERSION\"/SCRIPT_VERSION = \"$NEW_SCRIPT_VERSION\"/" main.py
              if [[ $(git status) == *"nothing to commit, working tree clean"* ]]; then
              echo "Nothing to commit, working tree clean"
              exit 0
              fi
              git config user.name "GitHub Actions"
              git config user.email "actions@github.com"
              git remote set-url origin https://${{ secrets.GIT_AUTH }}@github.com/origamiofficial/aiub-notice-checker.git
              git add main.py
              git commit -m "Bump Script Version"
              git push
              echo "New Version: $NEW_SCRIPT_VERSION"
              echo VERSION_CODE=$NEW_SCRIPT_VERSION >> $GITHUB_OUTPUT
              echo "CREATE_RELEASE=true" >> $GITHUB_OUTPUT
              
            fi
          fi
      -
        name: Create release
        if: steps.version_code_check.outputs.CREATE_RELEASE == 'true'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./main.py
          release_name: ${{ steps.version_code_check.outputs.VERSION_CODE }}
          tag: ${{ steps.version_code_check.outputs.VERSION_CODE }}
          make_latest: true
          overwrite: true